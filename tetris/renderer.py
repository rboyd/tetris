# AUTOGENERATED! DO NOT EDIT! File to edit: 05_renderer.ipynb (unless otherwise specified).

__all__ = ['Renderer']

# Cell
from .piece import Piece
from .playfield import Playfield
import svgwrite
from IPython.display import SVG

class Renderer:
    def playfield_to_svg(self, pf: Playfield) -> SVG:
        A = pf.toarray()
        side_len = 10
        dwg = svgwrite.Drawing()
        dwg.viewbox(0,0,300,450)

        height = len(A)
        width = len(A[0])

        # border around entire playfield
        #dwg.add(dwg.rect((0, 0), (width*side_len, height*side_len), stroke="green"))

        for row in range(height):
            for col in range(len(A[0])):
                left_top = (col*side_len, (height-row)*side_len)
                width_height = (side_len, side_len)
                stroke = "#cccccc"
                fill = 'white'
                corner_radius = 0
                if A[row][col]:
                    stroke, fill = '#112543', '#d1eaf3'
                    corner_radius = 1
                dwg.add(dwg.rect(left_top, width_height, stroke=stroke, fill=fill, rx=corner_radius, ry=corner_radius))
        return SVG(dwg.tostring())