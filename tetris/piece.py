# AUTOGENERATED! DO NOT EDIT! File to edit: 01_piece.ipynb (unless otherwise specified).

__all__ = ['Piece']

# Cell
from math import inf

class Piece:
    def __init__(self, rep:str):
        self.arr = []

        srows = rep.split('\n')
        self._height = len(srows)
        self._width = len(srows[0])
        self._top_cell = [-1] * self._width
        self._bottom_cell = [inf] * self._width
        for i, line in enumerate(reversed(srows)):
            row = [True if ch == '*' else False for ch in line]
            for j, col in enumerate(row):
                if col:
                    self._top_cell[j] = i
                    self._bottom_cell[j] = min(self._bottom_cell[j], i)
            self.arr.append(row)

    @property
    def height(self) -> int:
        return self._height

    @property
    def width(self) -> int:
        return len(self.arr[0])

    def toarray(self) -> [[bool]]:
        return self.arr

    def top_cell(self, col:int) -> int:
        return self._top_cell[col]

    def bottom_cell(self, col:int) -> int:
        return self._bottom_cell[col]